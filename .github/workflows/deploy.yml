name: Deploy Spring Boot

# main 브랜치에 push 되면 실행
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest   # GitHub-호스트 러너

    steps:
      # 1. 소스 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. Gradle 빌드 (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. JAR 파일을 서버로 전송 ────────────────────────────────
      - name: Copy Jar to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          # 로컬에서 빌드된 JAR
          source: "build/libs/test-api-0.0.1-SNAPSHOT.jar"
          # 서버에서 사용할 고정 JAR 위치/이름
          target: "/home/${{ secrets.SERVER_USER }}/app/test-api.jar"

      # 6. 서버에 SSH 접속해 배포 ────────────────────────────────
      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e

            APP_DIR="/home/${{ secrets.SERVER_USER }}/app"
            JAR_NAME="test-api.jar"
            LOG_FILE="$APP_DIR/app.log"

            # 1) DB JSON을 환경변수에 주입
            export DB_CONFIG_JSON='${{ secrets.DB_CONFIG_JSON }}'

            # 2) 기존 프로세스 종료 (실패해도 무시)
            pkill -f "$JAR_NAME" || true

            # 3) 종료 대기
            sleep 5

            # 4) 애플리케이션 재시작 (nohup)
            echo "애플리케이션 재시작..."
            nohup java -jar "$APP_DIR/$JAR_NAME" --spring.profiles.active=prod > "$LOG_FILE" 2>&1 &

            # 5) 기동 확인 (헬스체크)
            echo "헬스체크 시작..."
            for i in {1..10}; do
              if curl -fs https://h-infinite-power.store/test-api/health; then
                echo "✅ 애플리케이션이 정상적으로 시작되었습니다."
                exit 0
              fi
              echo "헬스체크 실패, 재시도 중... ($i/10)"
              sleep 10
            done
            echo "❌ 애플리케이션 시작 실패"
            exit 1

      # 7. 실패 시 서버 로그 수집 ────────────────────────────────
      - name: Fetch server logs
        if: failure()
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "/home/${{ secrets.SERVER_USER }}/app/app.log"
          target: "./app.log"
